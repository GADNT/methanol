buildscript {
  ext.versions = [
      'junit'           : '5.5.2',
      'checkerFramework': '3.0.0',
      'modulePlugin'    : '1.6.0',
      'reactiveStreams' : '1.0.3'
  ]

  ext.deps = [
      'junitApi'              : "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
      'junitEngine'           : "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
      'checkerFramework'      : "org.checkerframework:checker:${versions.checkerFramework}",
      'checkerFrameworkQual'  : "org.checkerframework:checker-qual:${versions.checkerFramework}",
      'modulePlugin'          : "org.javamodularity:moduleplugin:${versions.modulePlugin}",
      'reactiveStreamsTckFlow': "org.reactivestreams:reactive-streams-tck-flow:${versions.reactiveStreams}"
  ]

  repositories {
    gradlePluginPortal()
  }

  dependencies {
    classpath deps.modulePlugin
  }
}

plugins {
  id 'org.checkerframework' version '0.4.9' apply false
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'org.checkerframework'
  apply plugin: 'org.javamodularity.moduleplugin'

  group = 'com.github.mizosoft.methanol'
  version = '1.0-SNAPSHOT'

  sourceCompatibility = JavaVersion.VERSION_11

  repositories {
    jcenter()
  }

  dependencies {
    implementation deps.checkerFrameworkQual
    checkerFramework deps.checkerFramework

    testImplementation deps.junitApi
    testRuntimeOnly deps.junitEngine
  }

  checkerFramework {
    checkers = [
        // 'org.checkerframework.checker.nullness.NullnessChecker'
    ]
  }

  tasks.withType(Test) {
    exclude("**/testing/***")
    testLogging {
      events = ['skipped', 'failed']
      showStandardStreams = true
      exceptionFormat = "full"
    }
  }

  test {
    useJUnitPlatform()
    moduleOptions {
      runOnClasspath = true
    }
  }
}
