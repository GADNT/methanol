library {
  baseName = 'brotlidecjni'
  linkage = [Linkage.SHARED]

  source.from 'src/jni'

  // Add jni include pathes
  binaries.configureEach(CppSharedLibrary) {
    def javaHome = System.getenv().JAVA_HOME
    if (!javaHome) {
      throw new GradleException('JAVA_HOME not found')
    }
    if (!javaHome.endsWith('/')) {
      javaHome += '/'
    }

    def includes = compileTask.get().includes
    includes.from javaHome + 'include'
    def os = machines.host().operatingSystemFamily
    if (os.isLinux()) {
      includes.from javaHome + 'include/linux'
    } else if (os.isWindows()) {
      includes.from javaHome + 'include/win32'
    } else if (os.isMacOs()) {
      includes.from javaHome + 'include/darwin'
    } else {
      throw new GradleException('Unsupported OS: ' + os)
    }
  }

  dependencies {
    implementation project(':methanol-brotli:brotli-dec')
  }
}

configurations.create('jniRuntimeElements') {
  canBeResolved false
  canBeConsumed true
  attributes {
    attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage.class, 'jni-runtime-resources'))
  }
}

artifacts {
  jniRuntimeElements file("$buildDir/lib/main/release"), {
    builtBy {
      tasks.findAll { task -> task.name.startsWith('assembleRelease') }
    }
  }
}
