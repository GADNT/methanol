library {
  baseName = 'brotlijni'
  linkage = [Linkage.SHARED]

  source.from 'src/jni'

  binaries.configureEach(CppSharedLibrary) {
    def includes = compileTask.get().includes

    // add jni include paths
    def javaHome = System.getenv().JAVA_HOME
    if (!javaHome) {
      throw new GradleException('JAVA_HOME not found')
    }
    if (javaHome.endsWith('/')) {
      javaHome = javaHome.substring(0, javaHome.length() - 1)
    }
    includes.from "$javaHome/include"
    def os = machines.host().operatingSystemFamily
    if (os.isLinux()) {
      includes.from "$javaHome/include/linux"
    } else if (os.isWindows()) {
      includes.from "$javaHome/include/win32"
    } else if (os.isMacOs()) {
      includes.from "$javaHome/include/darwin"
    } else {
      throw new GradleException('unsupported OS: ' + os)
    }

    // add common/ from brotli-dec so that common_jni can include dictionary.h
    includes.from project(':methanol-brotli:brotli-dec').file('src/common')
  }

  dependencies {
    implementation project(':methanol-brotli:brotli-dec')
  }
}
